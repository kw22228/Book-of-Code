"use strict";
(function () {
    const tests = [
        10,
        'red',
        true,
        ['+', 10, 5],
        ['case', ['>', 20, 10], 'red', 'blue', 'green'],
        ['**', 2, 31],
        ['rgb', 255, 128, 64],
        ['rgb', 255, 0, 127, 0], // 값이 너무많다.
    ];
    const tests2 = [
        10,
        'red',
        true,
        ['+', 10, 5],
        ['case', ['>', 20, 10], 'red', 'blue', 'green'],
        ['**', 2, 31],
        ['rgb', 255, 128, 64],
    ]; // **문자열을 체크
    const tests3 = [
        10,
        'red',
        true,
        ['+', 10, 5],
        ['case', ['>', 20, 10], 'red', 'blue', 'green'],
        ['**', 2, 31],
        ['rgb', 255, 128, 64],
        ['rgb', 255, 128, 64, 73],
    ];
    const okExpression = [
        ['-', 12],
        ['+', 1, 2, 3],
        ['*', 2, 3, 4],
    ];
})();
/*
    - 타입을 너무 정확하게 하려다가 더 복잡해질 수 있다. (오히려 타입이 없는 것보다 더 나쁘다.)
    - 정확하게 타입을 모델링 할 수 없다면, 부정확하게 모델링하지 말아야한다.
    - 타입 정보를 구체적으로 만들수록 오류 메세지와 오토 컴플리트에 집중해야한다.
*/
